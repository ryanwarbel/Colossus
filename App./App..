// Colossus Core Console v1
// Frontend (React + Tailwind) - Vercel Ready

import React, { useState } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

export default function ColossusConsole() {
  const [input, setInput] = useState('');
  const [history, setHistory] = useState([]);
  const [loading, setLoading] = useState(false);

  const handleCommand = async () => {
    if (!input.trim()) return;
    setLoading(true);
    const response = await fetch('/api/command', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ command: input }),
    });
    const data = await response.json();
    setHistory([...history, { input, output: data.result }]);
    setInput('');
    setLoading(false);
  };

  return (
    <div className="min-h-screen bg-black text-white p-4">
      <h1 className="text-2xl font-bold mb-4">Colossus Core Console</h1>
      <div className="space-y-2">
        {history.map((entry, idx) => (
          <Card key={idx}>
            <CardContent>
              <p><strong>&gt;</strong> {entry.input}</p>
              <p className="text-green-400">{entry.output}</p>
            </CardContent>
          </Card>
        ))}
      </div>
      <div className="mt-4 flex gap-2">
        <input
          className="flex-grow bg-gray-800 p-2 rounded"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="Enter command..."
        />
        <Button onClick={handleCommand} disabled={loading}>
          {loading ? 'Running...' : 'Execute'}
        </Button>
      </div>
    </div>
  );
}
